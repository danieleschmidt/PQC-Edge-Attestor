apiVersion: v1
kind: Service
metadata:
  name: pqc-attestor-service
  namespace: pqc-attestor
  labels:
    app: pqc-edge-attestor
    component: api-server
    generation: "3"
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 3000
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: metrics
    protocol: TCP
  selector:
    app: pqc-edge-attestor
    component: api-server

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: pqc-attestor
  labels:
    app: postgres
    component: database
spec:
  type: ClusterIP
  ports:
  - name: postgres
    port: 5432
    targetPort: 5432
    protocol: TCP
  selector:
    app: postgres
    component: database

---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: pqc-attestor
  labels:
    app: redis
    component: cache
spec:
  type: ClusterIP
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
    protocol: TCP
  selector:
    app: redis
    component: cache

---
apiVersion: v1
kind: Service
metadata:
  name: pqc-attestor-lb
  namespace: pqc-attestor
  labels:
    app: pqc-edge-attestor
    component: load-balancer
    generation: "3"
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval: "30"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-path: "/health/live"
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 80
    targetPort: 80
    protocol: TCP
  - name: https
    port: 443
    targetPort: 443
    protocol: TCP
  selector:
    app: nginx-lb