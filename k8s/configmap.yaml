apiVersion: v1
kind: ConfigMap
metadata:
  name: pqc-attestor-config
  namespace: pqc-attestor
  labels:
    app: pqc-edge-attestor
    generation: "3"
data:
  # Application Configuration
  NODE_ENV: "production"
  LOG_LEVEL: "info"
  API_VERSION: "v1"
  
  # Database Configuration
  DB_HOST: "postgres-service"
  DB_PORT: "5432"
  DB_NAME: "pqc_attestor"
  
  # Redis Configuration
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  
  # Security Configuration
  ENABLE_SECURITY_HEADERS: "true"
  ENABLE_RATE_LIMITING: "true"
  ENABLE_AUDIT_LOGGING: "true"
  
  # Generation 3 Features
  ENABLE_CIRCUIT_BREAKERS: "true"
  ENABLE_HEALTH_CHECKS: "true"
  ENABLE_CACHING: "true"
  ENABLE_LOAD_BALANCING: "true"
  ENABLE_AUTO_SCALING: "true"
  ENABLE_PERFORMANCE_MONITORING: "true"
  
  # Monitoring Configuration
  METRICS_ENABLED: "true"
  METRICS_PORT: "9090"
  HEALTH_CHECK_INTERVAL: "30"
  
  # Quantum Features
  PQC_ALGORITHMS: "kyber1024,dilithium5,falcon1024"
  QUANTUM_ACCELERATION: "true"
  QUANTUM_DEFENSE: "true"
  
  # Performance Tuning
  CACHE_TTL: "300000"
  WORKER_PROCESSES: "4"
  MAX_REQUEST_SIZE: "10mb"
  REQUEST_TIMEOUT: "30000"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: pqc-attestor
  labels:
    app: nginx-lb
    generation: "3"
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;

    events {
        worker_connections 4096;
        use epoll;
        multi_accept on;
    }

    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        # Logging format
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for" '
                        'rt=$request_time uct="$upstream_connect_time" '
                        'uht="$upstream_header_time" urt="$upstream_response_time"';

        access_log /var/log/nginx/access.log main;

        # Performance settings
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        client_max_body_size 10m;

        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 10240;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/json
            application/javascript
            application/xml+rss
            application/atom+xml;

        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=health:10m rate=100r/s;

        # Upstream servers
        upstream pqc-app {
            least_conn;
            keepalive 32;
            server pqc-attestor-service:3000 max_fails=3 fail_timeout=30s;
        }

        # Health check endpoint
        server {
            listen 80;
            server_name health.localhost;
            
            location /health {
                access_log off;
                limit_req zone=health burst=10 nodelay;
                proxy_pass http://pqc-app/health/live;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_connect_timeout 5s;
                proxy_send_timeout 5s;
                proxy_read_timeout 5s;
            }
        }

        # Main application server
        server {
            listen 80;
            server_name _;

            # Security headers
            add_header X-Frame-Options DENY;
            add_header X-Content-Type-Options nosniff;
            add_header X-XSS-Protection "1; mode=block";
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
            add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'";

            # Rate limiting
            limit_req zone=api burst=20 nodelay;

            # API routes
            location /api/ {
                proxy_pass http://pqc-app;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_connect_timeout 30s;
                proxy_send_timeout 30s;
                proxy_read_timeout 30s;
                proxy_buffering on;
                proxy_buffer_size 4k;
                proxy_buffers 8 4k;
            }

            # Health checks
            location /health {
                proxy_pass http://pqc-app/health;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
            }

            # Metrics (restricted)
            location /metrics {
                deny all;
                return 403;
            }

            # Default route
            location / {
                proxy_pass http://pqc-app;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
        }
    }