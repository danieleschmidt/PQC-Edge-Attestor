# Production Dockerfile for PQC-Edge-Attestor
FROM node:18-alpine AS builder

# Install build dependencies
RUN apk add --no-cache \
    build-base \
    cmake \
    gcc \
    g++ \
    make \
    python3 \
    linux-headers

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci --only=production

# Copy source code
COPY . .

# Build native components
RUN make clean && make build-release

# Production stage
FROM node:18-alpine AS production

# Install runtime dependencies
RUN apk add --no-cache \
    curl \
    dumb-init \
    tini

# Create app user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S pqcuser -u 1001

WORKDIR /app

# Copy built application from builder stage
COPY --from=builder --chown=pqcuser:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=pqcuser:nodejs /app/src ./src
COPY --from=builder --chown=pqcuser:nodejs /app/build ./build
COPY --from=builder --chown=pqcuser:nodejs /app/package*.json ./

# Create necessary directories
RUN mkdir -p logs data certs && \
    chown -R pqcuser:nodejs logs data certs

# Copy production configuration
COPY --chown=pqcuser:nodejs config/production.json ./config/

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:3000/health || exit 1

# Switch to non-root user
USER pqcuser

# Use tini as init process
ENTRYPOINT ["/sbin/tini", "--"]

# Start the application
CMD ["node", "src/index.js"]