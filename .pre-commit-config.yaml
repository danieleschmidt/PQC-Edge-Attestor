# Pre-commit configuration for PQC-Edge-Attestor
# https://pre-commit.com/

repos:
  # General code quality and formatting
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
        exclude: \.patch$
      - id: end-of-file-fixer
        exclude: \.patch$
      - id: check-yaml
        args: [--allow-multiple-documents]
      - id: check-json
      - id: check-xml
      - id: check-toml
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-symlinks
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      - id: detect-private-key
      - id: mixed-line-ending
        args: [--fix=lf]
      - id: no-commit-to-branch
        args: [--branch, main, --branch, master]

  # JavaScript/Node.js formatting and linting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.0.3
    hooks:
      - id: prettier
        files: \.(js|jsx|ts|tsx|json|md|yaml|yml)$
        exclude: |
          (?x)^(
            package-lock\.json|
            CHANGELOG\.md|
            \.github/.*|
            docs/.*\.md
          )$

  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v8.53.0
    hooks:
      - id: eslint
        files: \.(js|jsx|ts|tsx)$
        args: [--fix, --max-warnings=0]
        additional_dependencies:
          - eslint@8.53.0
          - eslint-config-prettier@9.0.0
          - eslint-plugin-security@1.7.1
          - eslint-plugin-node@11.1.0

  # C/C++ formatting and linting
  - repo: https://github.com/pocc/pre-commit-hooks
    rev: v1.3.5
    hooks:
      - id: clang-format
        args: [-i, --style=file]
        files: \.(c|h|cpp|hpp|cc|cxx)$
      - id: cppcheck
        args: [--enable=all, --suppress=missingIncludeSystem, --error-exitcode=1]
        files: \.(c|cpp|cc|cxx)$

  # Python formatting and linting
  - repo: https://github.com/psf/black
    rev: 23.10.1
    hooks:
      - id: black
        language_version: python3
        files: \.py$

  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: [--profile, black]
        files: \.py$

  - repo: https://github.com/pycqa/flake8
    rev: 6.1.0
    hooks:
      - id: flake8
        args: [--max-line-length=88, --extend-ignore=E203,W503]
        files: \.py$

  # Security scanning
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-r, -x, tests/]
        files: \.py$

  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: [--baseline, .secrets.baseline]
        exclude: |
          (?x)^(
            package-lock\.json|
            poetry\.lock|
            \.secrets\.baseline|
            tests/.*
          )$

  # Shell script linting
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.6
    hooks:
      - id: shellcheck
        args: [-e, SC1091]
        files: \.(sh|bash)$

  # Docker linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint
        files: Dockerfile.*

  # YAML formatting and validation
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.32.0
    hooks:
      - id: yamllint
        args: [-c, .yamllint.yml]
        files: \.(yaml|yml)$

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.37.0
    hooks:
      - id: markdownlint
        args: [--fix]
        files: \.md$
        exclude: |
          (?x)^(
            CHANGELOG\.md|
            \.github/.*
          )$

  # License header check
  - repo: https://github.com/Lucas-C/pre-commit-hooks
    rev: v1.5.4
    hooks:
      - id: insert-license
        files: \.(js|jsx|ts|tsx|c|h|cpp|hpp|py)$
        args:
          - --license-filepath
          - .license-header.txt
          - --comment-style
          - //
        exclude: |
          (?x)^(
            node_modules/.*|
            build/.*|
            dist/.*|
            coverage/.*|
            test/.*|
            tests/.*
          )$

  # Conventional commit linting
  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v3.0.0
    hooks:
      - id: conventional-pre-commit
        stages: [commit-msg]
        args: [--strict]

# Additional configuration
default_stages: [commit]
fail_fast: false
minimum_pre_commit_version: 3.0.0

# CI-specific settings
ci:
  autofix_prs: true
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks

    for more information, see https://pre-commit.ci
  autoupdate_schedule: weekly
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  skip: [eslint, cppcheck, bandit, shellcheck, hadolint]
