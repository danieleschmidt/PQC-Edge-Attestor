# Production Docker Compose configuration for PQC Edge Attestor
# TERRAGON SDLC Generation 4 - Production deployment

version: '3.8'

services:
  # Main PQC Edge Attestor Application
  pqc-attestor:
    build:
      context: .
      dockerfile: Dockerfile.prod
      args:
        NODE_ENV: production
    image: terragon/pqc-edge-attestor:latest
    container_name: pqc-attestor-main
    restart: unless-stopped
    ports:
      - "8443:8443"  # HTTPS only in production
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=info
      - ENABLE_OPTIMIZATION=true
      - ENABLE_MULTI_REGION=true
      - ENABLE_I18N=true
      - COMPLIANCE_MODE=strict
      - SECURITY_LEVEL=5
      - PRIMARY_REGION=${PRIMARY_REGION:-us-east-1}
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://pqcuser:${DB_PASSWORD}@postgres:5432/pqc_attestor
    volumes:
      - ./config/production.json:/app/config/production.json:ro
      - ./logs:/app/logs
      - ./data/certificates:/app/certificates:ro
      - attestor_data:/app/data
    depends_on:
      - redis
      - postgres
      - prometheus
    networks:
      - pqc-network
    healthcheck:
      test: ["CMD", "curl", "-f", "https://localhost:8443/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: pqc-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - pqc-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: pqc-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=pqc_attestor
      - POSTGRES_USER=pqcuser
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - pqc-network

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: pqc-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
    networks:
      - pqc-network

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  attestor_data:

networks:
  pqc-network:
    driver: bridge